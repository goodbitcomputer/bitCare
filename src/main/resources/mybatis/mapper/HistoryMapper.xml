<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bit.bitcare.dao.HistoryDAO">

    <!-- 환자(patient_id)의 진료 기록(history) 목록 -->
    <select id="selectByPatientId" parameterType="int" resultType="historyDTO">
        SELECT a.*, dept.dept, employee.name, sorted_b.name as disease_name FROM history a
        LEFT JOIN employee
        ON a.employee_id = employee.id
        LEFT JOIN dept
        ON a.dept_id = dept.id
        LEFT JOIN (
        SELECT history_id, name FROM history_disease
        GROUP BY history_id
        ORDER BY degree desc
        ) AS sorted_b
        ON a.id = sorted_b.history_id
        WHERE a.patient_id = #{patientId}
        ORDER BY a.id DESC;
    </select>

    <!-- 진료 기록 선택 -->
    <select id="selectOne" parameterType="int" resultType="historyDTO">
        select * from `history`
        where id = #{id}
    </select>

    <!-- 모든 진료 기록(history) 보여주기 -->
    <select id="selectAll" resultType="historyDTO">
        SELECT * FROM `history`
    </select>

    <!-- 진료 기록(history) 삭제 -->
    <delete id="delete" parameterType="int">
        DELETE FROM `history`
        WHERE id= #{id}
    </delete>

    <!-- 진료 기록(history) 생성 -->
    <insert id="insert" parameterType="historyDTO" useGeneratedKeys="true" keyProperty="id">
        insert into
        `history`(employee_id,patient_id,dept_id,memo,bp_systolic,bp_diastolic,height,weight,temperature,symptom_detail,entry_date,visit)
        values(#{employeeId}, #{patientId}, #{deptId}, #{memo}, #{bpSystolic}, #{bpDiastolic}, #{height}, #{weight},
        #{temperature}, #{symptomDetail}, now(), #{visit})
    </insert>

    <!-- 진료 기록(history) 수정-->
    <update id="update" parameterType="historyDTO">
        UPDATE `history` SET
        employee_id = #{employeeId},
        patient_id = #{patientId},
        dept_id = #{deptId},
        memo = #{memo},
        bp_systolic = #{bpSystolic},
        bp_diastolic = #{bpDiastolic},
        height = #{height},
        weight = #{weight},
        temperature = #{temperature},
        symptom_detail = #{symptomDetail},
        entry_date = #{entryDate},
        visit = #{visit}
        WHERE
        id = #{id}
    </update>

    <select id="selectNotReceiptHistory" resultType="historyDTO">
        select `history`.* from `history`
        left join `receipt`
        on `history`.`id` = `receipt`.`history_id`
        where `receipt`.`history_id` is null;
    </select>

</mapper>